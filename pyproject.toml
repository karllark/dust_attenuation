[build-system]
requires = [
  "setuptools>=62.1",
  "setuptools_scm[toml]>=8.0.0",
  "wheel",]
build-backend = "setuptools.build_meta"

[project]
name = "dust_attenuation"
description = "Interstellar Dust Extinction Models"
requires-python = ">=3.10"
readme = { file = "README.rst", content-type = "text/x-rst" }
license = { file = "LICENSE" }
authors = [
  { name = "Karl D. Gordon", email = "kgordon@stsci.edu" },
  {  name = "David Corre" },
]
dependencies = ["astropy", "scipy"]
dynamic = ["version"]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-doctestplus",
    "pytest-cov",
    "matplotlib"
]
docs = [
    "sphinx",
    "sphinx-automodapi",
    "matplotlib",
    "graphviz"
]
[project.urls]
repository = "https://github.com/karllark/dust_attenuation"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
include = ["dust_attenuation*"]

[tool.setuptools.package-data]
dust_attenuation = ["data/*"]

[tool.setuptools_scm]
version_file = "dust_attenuation/version.py"

[tool.pytest.ini_options]
testpaths = [
  "dust_attenuation",
  "docs",
]
doctest_plus = "enabled"
text_file_format = "rst"
addopts = "--doctest-rst"
norecursedirs = [
  "dust_attenuation[\\/]_dev",
  "dust_attenuation/docs/_build/*",
  "dust_attenuation/docs/api/*"
]

[tool.coverage.run]
omit = [
 "dust_attenuation/__init*",
 "dust_attenuation/conftest.py",
 "dust_attenuation/*setup_package*",
 "dust_attenuation/tests/*",
 "dust_attenuation/*/tests/*",
 "dust_attenuation/extern/*",
 "dust_attenuation/version*",
 "*/dust_attenuation/__init*",
 "*/dust_attenuation/conftest.py",
 "*/dust_attenuation/*setup_package*",
 "*/dust_attenuation/tests/*",
 "*/dust_attenuation/*/tests/*",
 "*/dust_attenuation/extern/*",
 "*/dust_attenuation/version*",
]

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about packages we have installed
  "except ImportError",
  # Don't complain if tests don't hit assertions
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain about script hooks
  "def main(.*):",
  # Ignore branches that don't pertain to this version of Python
  "pragma: py{ignore_python_version}",
  # Don't complain about IPython completion helper
  "def _ipython_key_completions_",
  # typing.TYPE_CHECKING is False at runtime
  "if TYPE_CHECKING:",
  # Ignore typing overloads
  "@overload",
]

[tool.flake8]
    exclude = ["sphinx","*parsetab.py","conftest.py","docs/conf.py","setup.py"]
    max-complexity = 10
    max-line-length = 100
    extend-ignore = """
        W503,
        E203,
        E501,
    """
